#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./fix-and-deploy.sh [SERVER_IP] [SERVER_USER]

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
SERVER_IP=${1:-"89.169.3.47"}
SERVER_USER=${2:-"root"}

log_info "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Necrasovka Search –Ω–∞ ${SERVER_USER}@${SERVER_IP}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –ª–æ–∫–∞–ª—å–Ω–æ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
if command -v docker &> /dev/null && docker info &> /dev/null 2>&1; then
    log_info "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–±–æ—Ä–∫–∏ Docker –æ–±—Ä–∞–∑–æ–≤ –ª–æ–∫–∞–ª—å–Ω–æ..."
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–±–æ—Ä–∫—É frontend
    log_info "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ frontend –æ–±—Ä–∞–∑–∞..."
    if docker build -f Dockerfile.frontend -t necrasovka-frontend-test . > /tmp/frontend-build.log 2>&1; then
        log_success "‚úÖ Frontend –æ–±—Ä–∞–∑ —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è —É—Å–ø–µ—à–Ω–æ"
        docker rmi necrasovka-frontend-test 2>/dev/null || true
    else
        log_error "‚ùå Frontend –æ–±—Ä–∞–∑ –Ω–µ —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è:"
        tail -10 /tmp/frontend-build.log
        log_info "–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
    fi
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–±–æ—Ä–∫—É backend
    log_info "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ backend –æ–±—Ä–∞–∑–∞..."
    if docker build -f Dockerfile.backend -t necrasovka-backend-test . > /tmp/backend-build.log 2>&1; then
        log_success "‚úÖ Backend –æ–±—Ä–∞–∑ —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è —É—Å–ø–µ—à–Ω–æ"
        docker rmi necrasovka-backend-test 2>/dev/null || true
    else
        log_error "‚ùå Backend –æ–±—Ä–∞–∑ –Ω–µ —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è:"
        tail -10 /tmp/backend-build.log
        log_info "–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
    fi
    
    rm -f /tmp/frontend-build.log /tmp/backend-build.log
else
    log_warning "Docker –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
fi

# –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º
log_info "üì¶ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞ —Å —Å–µ—Ä–≤–µ—Ä–æ–º..."
./deploy/sync-to-server.sh "$SERVER_IP" "$SERVER_USER"

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
log_info "üöÄ –ó–∞–ø—É—Å–∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."

# –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
cat > /tmp/server-deploy.sh << 'EOF'
#!/bin/bash

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

cd /opt/necrasovka

# –ü—Ä–æ–≤–µ—Ä—è–µ–º .env.prod
if [[ ! -f .env.prod ]]; then
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ .env.prod –∏–∑ —à–∞–±–ª–æ–Ω–∞..."
    cp env.prod.template .env.prod
    log_info "‚ö†Ô∏è –ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å .env.prod —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏!"
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose -f docker-compose.prod.yml down 2>/dev/null || true

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤
log_info "–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤..."
docker system prune -f

# –°–±–æ—Ä–∫–∞ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º–∏ –ª–æ–≥–∞–º–∏
log_info "–°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
if docker-compose -f docker-compose.prod.yml build --no-cache --progress=plain; then
    log_success "‚úÖ –û–±—Ä–∞–∑—ã —Å–æ–±—Ä–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ"
else
    log_error "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –æ–±—Ä–∞–∑–æ–≤"
    exit 1
fi

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
log_info "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
if docker-compose -f docker-compose.prod.yml up -d; then
    log_success "‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"
else
    log_error "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤"
    exit 1
fi

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
log_info "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
log_info "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker-compose -f docker-compose.prod.yml ps

# –ü—Ä–æ–≤–µ—Ä–∫–∞ health check
log_info "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
for i in {1..10}; do
    if curl -s http://localhost/ > /dev/null 2>&1; then
        log_success "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ!"
        break
    else
        log_info "–ü–æ–ø—ã—Ç–∫–∞ $i/10..."
        sleep 5
    fi
done

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏ –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫
if ! curl -s http://localhost:3000/health > /dev/null 2>&1; then
    log_error "‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏:"
    docker-compose -f docker-compose.prod.yml logs --tail=20
fi

log_success "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
log_info "üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://$(curl -s ifconfig.me || echo 'YOUR_SERVER_IP'):3000"
log_info "üìö API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://$(curl -s ifconfig.me || echo 'YOUR_SERVER_IP'):3000/docs"
log_info "üîç Health check: http://$(curl -s ifconfig.me || echo 'YOUR_SERVER_IP'):3000/health"
log_info "üß™ –ê–≤—Ç–æ—Ç–µ—Å—Ç—ã: http://$(curl -s ifconfig.me || echo 'YOUR_SERVER_IP'):3000/test-search"

EOF

# –ö–æ–ø–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
scp /tmp/server-deploy.sh "$SERVER_USER@$SERVER_IP:/tmp/"
ssh "$SERVER_USER@$SERVER_IP" "chmod +x /tmp/server-deploy.sh && /tmp/server-deploy.sh"

# –û—á–∏—Å—Ç–∫–∞
rm -f /tmp/server-deploy.sh

log_success "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
log_info "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
log_info "  –°—Ç–∞—Ç—É—Å:     ssh $SERVER_USER@$SERVER_IP 'cd /opt/necrasovka && docker-compose -f docker-compose.prod.yml ps'"
log_info "  –õ–æ–≥–∏:       ssh $SERVER_USER@$SERVER_IP 'cd /opt/necrasovka && docker-compose -f docker-compose.prod.yml logs -f'"
log_info "  –†–µ—Å—Ç–∞—Ä—Ç:    ssh $SERVER_USER@$SERVER_IP 'cd /opt/necrasovka && docker-compose -f docker-compose.prod.yml restart'"
log_info "  –û—Å—Ç–∞–Ω–æ–≤–∫–∞:  ssh $SERVER_USER@$SERVER_IP 'cd /opt/necrasovka && docker-compose -f docker-compose.prod.yml down'"
