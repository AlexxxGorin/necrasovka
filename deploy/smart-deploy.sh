#!/bin/bash

# –£–º–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –≤—ã–±–æ—Ä–æ–º —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./smart-deploy.sh [SERVER_IP] [SERVER_USER]

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
SERVER_IP=${1:-"89.169.3.47"}
SERVER_USER=${2:-"root"}

log_info "üöÄ –£–º–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Necrasovka Search –Ω–∞ ${SERVER_USER}@${SERVER_IP}"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
find_free_port() {
    local server_ip=$1
    local server_user=$2
    
    log_info "üîç –ü–æ–∏—Å–∫ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
    
    # –°–ø–∏—Å–æ–∫ –ø–æ—Ä—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ (–≤ –ø–æ—Ä—è–¥–∫–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è)
    local ports=(3000 3001 3002 8080 8081 8082 8000 8001 8002 9000 9001 9002)
    
    for port in "${ports[@]}"; do
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–≤–æ–±–æ–¥–µ–Ω –ª–∏ –ø–æ—Ä—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        if ssh "$server_user@$server_ip" "! netstat -tln 2>/dev/null | grep -q ':$port '" 2>/dev/null; then
            echo $port
            return 0
        fi
    done
    
    # –ï—Å–ª–∏ –Ω–∏ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ—Ä—Ç–æ–≤ –Ω–µ —Å–≤–æ–±–æ–¥–µ–Ω, –∏—â–µ–º –ª—é–±–æ–π —Å–≤–æ–±–æ–¥–Ω—ã–π
    local free_port=$(ssh "$server_user@$server_ip" "
        for port in {3000..9999}; do
            if ! netstat -tln 2>/dev/null | grep -q \":\$port \"; then
                echo \$port
                break
            fi
        done
    " 2>/dev/null)
    
    if [ -n "$free_port" ]; then
        echo $free_port
        return 0
    else
        return 1
    fi
}

# –ù–∞—Ö–æ–¥–∏–º —Å–≤–æ–±–æ–¥–Ω—ã–π –ø–æ—Ä—Ç
FREE_PORT=$(find_free_port "$SERVER_IP" "$SERVER_USER")

if [ -z "$FREE_PORT" ]; then
    log_error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–≤–æ–±–æ–¥–Ω—ã–π –ø–æ—Ä—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
    exit 1
fi

log_success "‚úÖ –ù–∞–π–¥–µ–Ω —Å–≤–æ–±–æ–¥–Ω—ã–π –ø–æ—Ä—Ç: $FREE_PORT"

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–æ—Ä—Ç–æ–º
log_info "üìù –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –ø–æ—Ä—Ç–∞ $FREE_PORT..."

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π docker-compose —Ñ–∞–π–ª —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–æ—Ä—Ç–æ–º
cp docker-compose.smart.yml /tmp/docker-compose.smart.yml
sed -i "s/3000:80/$FREE_PORT:80/g" /tmp/docker-compose.smart.yml

# –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç —Å —Å–µ—Ä–≤–µ—Ä–æ–º
log_info "üì¶ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞ —Å —Å–µ—Ä–≤–µ—Ä–æ–º..."
./deploy/sync-to-server.sh "$SERVER_IP" "$SERVER_USER"

# –ö–æ–ø–∏—Ä—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π docker-compose —Ñ–∞–π–ª
scp /tmp/docker-compose.smart.yml "$SERVER_USER@$SERVER_IP:/opt/necrasovka/"

# –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
cat > /tmp/smart-server-deploy.sh << EOF
#!/bin/bash

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() {
    echo -e "\${BLUE}[INFO]\${NC} \$1"
}

log_success() {
    echo -e "\${GREEN}[SUCCESS]\${NC} \$1"
}

log_error() {
    echo -e "\${RED}[ERROR]\${NC} \$1"
}

cd /opt/necrasovka

# –ü—Ä–æ–≤–µ—Ä—è–µ–º .env.prod
if [[ ! -f .env.prod ]]; then
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ .env.prod –∏–∑ —à–∞–±–ª–æ–Ω–∞..."
    cp env.prod.template .env.prod
    log_info "‚ö†Ô∏è –ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å .env.prod —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏!"
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose -f docker-compose.prod.yml down 2>/dev/null || true
docker-compose -f docker-compose.simple.yml down 2>/dev/null || true
docker-compose -f docker-compose.smart.yml down 2>/dev/null || true

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤
log_info "–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤..."
docker system prune -af

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ —Å —É–º–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
log_info "–°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
docker-compose -f docker-compose.smart.yml build --no-cache

log_info "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ –Ω–∞ –ø–æ—Ä—Ç—É $FREE_PORT..."
docker-compose -f docker-compose.smart.yml up -d

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
log_info "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
if docker-compose -f docker-compose.smart.yml ps | grep -q "Up"; then
    log_success "‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
else
    log_error "‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –∑–∞–ø—É—Å–∫–æ–º —Å–µ—Ä–≤–∏—Å–æ–≤"
    docker-compose -f docker-compose.smart.yml logs --tail=20
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
sleep 10

if curl -f -s http://localhost:$FREE_PORT/health > /dev/null; then
    log_success "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
    log_info "üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://\$(curl -s ifconfig.me || echo 'YOUR_SERVER_IP'):$FREE_PORT"
    log_info "üìö API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://\$(curl -s ifconfig.me || echo 'YOUR_SERVER_IP'):$FREE_PORT/docs"
    log_info "üîç Health check: http://\$(curl -s ifconfig.me || echo 'YOUR_SERVER_IP'):$FREE_PORT/health"
    log_info "üß™ –ê–≤—Ç–æ—Ç–µ—Å—Ç—ã: http://\$(curl -s ifconfig.me || echo 'YOUR_SERVER_IP'):$FREE_PORT/test-search"
else
    log_error "‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:"
    docker-compose -f docker-compose.smart.yml logs --tail=20
fi

EOF

# –ö–æ–ø–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
scp /tmp/smart-server-deploy.sh "$SERVER_USER@$SERVER_IP:/tmp/"
ssh "$SERVER_USER@$SERVER_IP" "chmod +x /tmp/smart-server-deploy.sh && /tmp/smart-server-deploy.sh"

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
rm -f /tmp/docker-compose.smart.yml /tmp/smart-server-deploy.sh

log_success "üéâ –£–º–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
log_info "üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ –Ω–∞ –ø–æ—Ä—Ç—É: $FREE_PORT"
log_info "üîó –ê–¥—Ä–µ—Å: http://$SERVER_IP:$FREE_PORT"
